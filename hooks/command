#!/bin/bash

set -euo pipefail

install_reporter() {
  if [ "$install" = false ] ; then
    return
  fi

  printf -- "--- :codeclimate: Installing %s cc-test-reporter\\n" "${version}"

  curl --location --silent --output ./cc-test-reporter \
    "https://codeclimate.com/downloads/test-reporter/test-reporter-${version}-linux-amd64" && \
  chmod +x ./cc-test-reporter
  # add current working directory to path so cc-test-reporter is accessible
  PATH=${PATH}:$(pwd)
  export PATH
  printf -- "cc-test-reporter --version\\n%s\\n" "$(cc-test-reporter -v)"
}

download_artifacts() {
  if [ "$download" = false ] ; then
    return
  fi

  printf -- "--- :buildkite: Downloading artifact\\n"
  echo buildkite-agent artifact download "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_ARTIFACT}" ./
  buildkite-agent artifact download "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_ARTIFACT}" ./
}

format_file() {
  existing_file=$(basename "$1")
  output_file="coverage/$formatted_file_prefix.$existing_file"
  [[ $output_file == *.json ]] || output_file+=.json

  args=()
  args+=( "format-coverage" )
  args+=( ${debug:+"-d"} )
  args+=( "--input-type" )
  args+=( "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_INPUT_TYPE}" )
  args+=( "--output" )
  args+=( "${output_file}" )
  if [ -n "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_PREFIX-}" ]; then
    args+=( "--prefix" )
    args+=( "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_PREFIX}" )
  fi
  if [ -n "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_ADD_PREFIX-}" ]; then
    args+=( "--add-prefix" )
    args+=( "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_ADD_PREFIX}" )
  fi
  args+=( "$1" )

  echo cc-test-reporter "${args[@]}"
  cc-test-reporter "${args[@]}"
}

format_files() {
  if [ "$format" = false ] ; then
    return
  fi

  printf -- "--- :codeclimate: Formatting coverage\\n"

  for f in ${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_ARTIFACT}; do
    format_file "$f" &
  done

  wait
}

report_coverage() {
  if [ "$report" = false ] ; then
    return
  fi

  printf -- "--- :codeclimate: Reporting coverage\\n"

  args=()
  args+=( "sum-coverage" )
  args+=( ${debug:+"-d"} )
  if [ -n "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_PARTS-}" ]; then
    args+=( "--parts" )
    args+=( "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_PARTS}" )
  fi
  # shellcheck disable=SC2206
  args+=( coverage/${formatted_file_prefix}.*.json )
  echo cc-test-reporter "${args[@]}"
  cc-test-reporter "${args[@]}"

  args=()
  args+=( "upload-coverage" )
  args+=( ${debug:+"-d"} )
  echo cc-test-reporter "${args[@]}"
  cc-test-reporter "${args[@]}"
}

debug=""
[[ -v BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_DEBUG ]] && debug="yes"

install=${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_INSTALL:-true}
download=${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_DOWNLOAD:-true}
format=${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_FORMAT:-true}
report=${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_REPORT:-true}
formatted_file_prefix=${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_FILE_PREFIX:-"codeclimate"}
version=${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_VERSION:-"latest"}

install_reporter
download_artifacts
format_files
report_coverage
